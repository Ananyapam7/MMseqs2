language: shell
os: linux
dist: xenial
addons:
  apt:
    packages: &default_packages
    - cmake
    - make
    - zlib1g-dev
    - libbz2-dev
    - vim-common
    - shellcheck
env:

jobs:
  include:
  - addons:
      apt:
        packages:
        - *default_packages
        - build-essential
    env: SIMD=NEON
    arch: arm64
  - addons:
      apt:
        packages:
        - *default_packages
        - clang-3.8
        - libc++-dev
        - libomp-dev
    env: CC=clang-3.8 CXX=clang++-3.8 SIMD=SSE4_1
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - *default_packages
        - clang-10
        - libc++-10-dev
        - libc++abi-10-dev
        - libomp-10-dev
    env: CC=clang-10 CXX=clang++-10 SIMD=SSE4_1
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - *default_packages
        - clang-10
        - libc++-10-dev
        - libc++abi-10-dev
        - libomp-10-dev
        - mpi-default-dev
    env: MPI=1 CC=clang-10 CXX=clang++-10 SIMD=SSE4_1
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *default_packages
        - gcc-4.8
        - g++-4.8
    env: CC=gcc-4.8 CXX=g++-4.8 SIMD=SSE4_1
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *default_packages
        - gcc-9
        - g++-9
    env: CC=gcc-9 CXX=g++-9 SIMD=SSE4_1
  - addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - *default_packages
        - gcc-9
        - g++-9
        - mpi-default-dev
    env: MPI=1 CC=gcc-9 CXX=g++-9 SIMD=SSE4_1
  allow_failures:
  - env: SIMD=NEON
  fast_finish: true

before_install:
  - export CC
  - export CXX

script:
  - |
    mkdir build; cd build; \
    cmake \
        -DHAVE_MPI="$([[ -z "$MPI" ]]; echo $?)" \
        -DHAVE_${SIMD}=1 \
        -DENABLE_WERROR=1 \
        -DHAVE_TESTS=1 ..; \
    make -j $(nproc --all); \
    if [[ "${SIMD}" = "NEON" ]]; then \
        mkdir path; \
        printf '#!/bin/sh\n/usr/bin/tee "$@" | tail\n' > path/tee; \
        chmod +x path/tee; \
        export PATH="$(readlink -f path):$PATH"; \
        ../util/regression/run_regression.sh ./src/mmseqs SCRATCH; \
    fi
